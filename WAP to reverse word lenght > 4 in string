/*
        WAP in C to reverse word lenght > 4 in string.
              i/p: char s[20]=“ias abcde mkdir ”;
              o/p:char s[20= “ias edcba irdkm ”;

*/

#include <stdio.h>
#include <string.h>

// Function to reverse characters from index 'start' to 'end' in the string
void reverse(int start, int end, char *str)
{
    while (start < end)
    {
        char temp = str[start];
        str[start] = str[end];
        str[end] = temp;
        start++;
        end--;
    }
}

int main()
{
    char str[30];             // Input string
    printf("Enter string: ");
    scanf(" %[^\n]", str);    // Read full line including spaces

    int i = 0;                // Index to traverse the string
    int begin, end;           // Start and end positions of a word
    int word_len = 0;         // Length of the current word

    while (str[i] != '\0')    // Traverse the string until null character
    {
        // Skip any leading spaces between words
        while (str[i] == ' ')
            i++;

        begin = i;            // Mark the beginning of the word

        // Traverse till end of the word or string
        while (str[i] != ' ' && str[i] != '\0')
            i++;

        end = i - 1;          // Mark the end of the word

        word_len = end - begin + 1;   // Calculate word length

        // Reverse the word if its length is greater than 4
        if (word_len > 4)
            reverse(begin, end, str);
    }

    // Print the modified string
    printf("Modified string: %s\n", str);

    return 0;
}
